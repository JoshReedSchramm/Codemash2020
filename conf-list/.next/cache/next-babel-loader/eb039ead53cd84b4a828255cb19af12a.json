{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/joshschramm/Projects/Codemash/conf-list/pages/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\nimport { Heading, Event } from '@joshreedschramm/jrs-codemash-lib';\nvar conferenceFeed = 'http://localhost:3000/api/conf';\n\nvar HomePage = function HomePage(_ref) {\n  var _ref$confList = _ref.confList,\n      confList = _ref$confList === void 0 ? [] : _ref$confList,\n      _ref$poweredBy = _ref.poweredBy,\n      poweredBy = _ref$poweredBy === void 0 ? '' : _ref$poweredBy;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Heading, {\n    level: \"2\",\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Front End Conference List 2020\"), __jsx(\"ol\", {\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, confList.map(function (conf, i) {\n    return __jsx(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(Event, {\n      eventName: conf.title,\n      url: conf.url,\n      date: conf.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Where: \", conf.location)));\n  })), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"This list was created by a JSON Feed hosted at \\xA0\", __jsx(\"a\", {\n    href: poweredBy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, poweredBy)));\n};\n\nHomePage.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(conferenceFeed));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            confList: data.conferences,\n            poweredBy: data.source\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/joshschramm/Projects/Codemash/conf-list/pages/index.jsx"],"names":["fetch","moment","Heading","Event","conferenceFeed","HomePage","confList","poweredBy","textAlign","map","conf","i","title","url","date","location","getInitialProps","res","json","data","conferences","source"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,OAAR,EAAiBC,KAAjB,QAA6B,mCAA7B;AAEA,IAAMC,cAAc,GAAG,gCAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqC;AAAA,2BAAnCC,QAAmC;AAAA,MAAnCA,QAAmC,8BAAxB,EAAwB;AAAA,4BAApBC,SAAoB;AAAA,MAApBA,SAAoB,+BAAR,EAAQ;AAElD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,EAII;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,CAACG,GAAT,CAAa,UAACC,IAAD,EAAOC,CAAP;AAAA,WACV;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAO,MAAA,SAAS,EAAED,IAAI,CAACE,KAAvB;AAA8B,MAAA,GAAG,EAAEF,IAAI,CAACG,GAAxC;AAA6C,MAAA,IAAI,EAAEH,IAAI,CAACI,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWJ,IAAI,CAACK,QAAhB,CADA,CADJ,CADU;AAAA,GAAb,CADL,CAJJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAEI;AAAG,IAAA,IAAI,EAAER,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBA,SAArB,CAFJ,CAfJ,CADJ;AAuBH,CAzBD;;AA2BAF,QAAQ,CAACW,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAELhB,KAAK,CAACI,cAAD,CAFA;;AAAA;AAEjBa,UAAAA,GAFiB;AAAA;AAAA,2CAGJA,GAAG,CAACC,IAAJ,EAHI;;AAAA;AAGjBC,UAAAA,IAHiB;AAAA,2CAKhB;AACHb,YAAAA,QAAQ,EAAEa,IAAI,CAACC,WADZ;AAEHb,YAAAA,SAAS,EAAEY,IAAI,CAACE;AAFb,WALgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAWA,eAAehB,QAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\nimport {Heading, Event} from '@joshreedschramm/jrs-codemash-lib';\n\nconst conferenceFeed = 'http://localhost:3000/api/conf';\n\nconst HomePage = ({confList = [], poweredBy = ''}) => {\n    \n    return (\n        <div>\n\n            <Heading level=\"2\" as=\"h1\">Front End Conference List 2020</Heading>\n            \n            <ol style={{textAlign: 'left'}}>\n                {confList.map((conf, i) => (\n                    <li key={i}>\n                        <Event eventName={conf.title} url={conf.url} date={conf.date}>\n                        <p>Where: {conf.location}</p>\n\n                        </Event>\n                    </li>\n                ))}\n            </ol>\n\n            <p>\n                This list was created by a JSON Feed hosted at &nbsp;\n                <a href={poweredBy}>{poweredBy}</a> \n            </p>\n\n        </div>\n    )\n}\n\nHomePage.getInitialProps = async () => {\n\n    const res = await fetch(conferenceFeed);\n    const data = await res.json();\n\n    return {\n        confList: data.conferences,\n        poweredBy: data.source\n    };\n};\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}