{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/joshschramm/Projects/Codemash/conf-list/pages/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\nimport { Heading } from '@joshreedschramm/jrs-codemash-lib';\nvar conferenceFeed = 'http://localhost:3000/api/conf';\n\nvar HomePage = function HomePage(_ref) {\n  var _ref$confList = _ref.confList,\n      confList = _ref$confList === void 0 ? [] : _ref$confList,\n      _ref$poweredBy = _ref.poweredBy,\n      poweredBy = _ref$poweredBy === void 0 ? '' : _ref$poweredBy;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Heading, {\n    level: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Front End Conference List 2020\"), __jsx(\"ol\", {\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, confList.map(function (conf, i) {\n    return __jsx(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, conf.title), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"When \", moment(conf.date, \"ddd MMM DD YYYY kk:mm:ss [GMT]ZZ [(]zz[)]\").format('MM-DD-YYYY [at] h:mm a')), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Where: \", conf.location), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: conf.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Learn More\")));\n  })), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"This list was created by a JSON Feed hosted at \\xA0\", __jsx(\"a\", {\n    href: poweredBy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, poweredBy)));\n};\n\nHomePage.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(conferenceFeed));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            confList: data.conferences,\n            poweredBy: data.source\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/joshschramm/Projects/Codemash/conf-list/pages/index.jsx"],"names":["fetch","moment","Heading","conferenceFeed","HomePage","confList","poweredBy","textAlign","map","conf","i","title","date","format","location","url","getInitialProps","res","json","data","conferences","source"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,OAAR,QAAsB,mCAAtB;AAEA,IAAMC,cAAc,GAAG,gCAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqC;AAAA,2BAAnCC,QAAmC;AAAA,MAAnCA,QAAmC,8BAAxB,EAAwB;AAAA,4BAApBC,SAAoB;AAAA,MAApBA,SAAoB,+BAAR,EAAQ;AAElD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,EAII;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,CAACG,GAAT,CAAa,UAACC,IAAD,EAAOC,CAAP;AAAA,WACV;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,KAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASV,MAAM,CAACQ,IAAI,CAACG,IAAN,EAAY,2CAAZ,CAAN,CAA+DC,MAA/D,CAAsE,wBAAtE,CAAT,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWJ,IAAI,CAACK,QAAhB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAEL,IAAI,CAACM,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAJJ,CADU;AAAA,GAAb,CADL,CAJJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAEI;AAAG,IAAA,IAAI,EAAET,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBA,SAArB,CAFJ,CAjBJ,CADJ;AAyBH,CA3BD;;AA6BAF,QAAQ,CAACY,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAELhB,KAAK,CAACG,cAAD,CAFA;;AAAA;AAEjBc,UAAAA,GAFiB;AAAA;AAAA,2CAGJA,GAAG,CAACC,IAAJ,EAHI;;AAAA;AAGjBC,UAAAA,IAHiB;AAAA,2CAKhB;AACHd,YAAAA,QAAQ,EAAEc,IAAI,CAACC,WADZ;AAEHd,YAAAA,SAAS,EAAEa,IAAI,CAACE;AAFb,WALgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAWA,eAAejB,QAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\nimport {Heading} from '@joshreedschramm/jrs-codemash-lib';\n\nconst conferenceFeed = 'http://localhost:3000/api/conf';\n\nconst HomePage = ({confList = [], poweredBy = ''}) => {\n    \n    return (\n        <div>\n\n            <Heading level=\"1\">Front End Conference List 2020</Heading>\n            \n            <ol style={{textAlign: 'left'}}>\n                {confList.map((conf, i) => (\n                    <li key={i}>\n                        <h2>{conf.title}</h2>\n                        <p>When {moment(conf.date, \"ddd MMM DD YYYY kk:mm:ss [GMT]ZZ [(]zz[)]\").format('MM-DD-YYYY [at] h:mm a')}</p>\n                        <p>Where: {conf.location}</p>\n                        <p>\n                            <a href={conf.url}>Learn More</a>\n                        </p>\n                    </li>\n                ))}\n            </ol>\n\n            <p>\n                This list was created by a JSON Feed hosted at &nbsp;\n                <a href={poweredBy}>{poweredBy}</a> \n            </p>\n\n        </div>\n    )\n}\n\nHomePage.getInitialProps = async () => {\n\n    const res = await fetch(conferenceFeed);\n    const data = await res.json();\n\n    return {\n        confList: data.conferences,\n        poweredBy: data.source\n    };\n};\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}